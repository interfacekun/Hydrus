"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _behavior=require("./behavior"),_blackboard=_interopRequireDefault(require("./blackboard")),_utils=_interopRequireDefault(require("./utils")),_logger=_interopRequireDefault(require("./logger"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var s=t[i];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),Object.defineProperty(e,"prototype",{writable:!1}),e}var BTEngine=function(){function t(e){_classCallCheck(this,t),this.$blackboard=new _blackboard.default(e.data),this.$decorators=e.decorators||{},this.$services=e.services||{},this.$tasks=e.tasks||{},this.timestamp=null,this.life=0,this.ticks=0,this.logs=[]}return _createClass(t,[{key:"load",value:function(e){e&&e.root?"task"===e.root.type?this.root=new _behavior.Task(null,e.root,this):this.root=new _behavior.Composite(null,e.root,this):_logger.default.error("BTEngine::load failed -- tree is invalid")}},{key:"tick",value:function(e){var t;this.root?(this.timestamp||(this.timestamp=_utils.default.lodash.now(),this.life=0,this.ticks=0),null==e&&(e=(t=_utils.default.lodash.now())-this.timestamp,this.timestamp=t),this.life+=e,this.ticks+=1,this.root.update(e),_utils.default.common.isFunction(this.$log)&&this.$log.call(null,{timestamp:this.life,index:this.ticks,delta:e,logs:this.logs}),this.logs=[]):_logger.default.error("BTEngine::tick failed -- root is null")}},{key:"setLog",value:function(e){this.$log=e}},{key:"log",value:function(e){this.logs.push(e)}},{key:"reset",value:function(){this.root?(this.timestamp=null,this.ticks=0,this.life=0,this.root.reset()):_logger.default.error("BTEngine::reset failed -- root is null")}}]),t}(),_default=(BTEngine.Status=_behavior.BehaviorStatus,BTEngine);exports.default=_default;